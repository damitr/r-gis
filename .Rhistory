help(package = datasets)
library(discoveries)
install.packages("discoveries")
install.packages("learnr")
library(learnr)
library(learnr)
```
This code computes the answer to one plus one,
change it so it computes two plus two:
```{r addition, exercise=TRUE}
---
```{r setup, include=FALSE}
library(learnr)
```
This code computes the answer to one plus one,
change it so it computes two plus two:
```{r addition, exercise=TRUE}
clear
cat()
cat("\014")
data(package = "datasets")
library(stars)
library(dslabs)
data(package = dslabs)
data(package = "dslabs")
data("PlantGrowth")
head(PlantGrowth)
head(sunspots)
data("sunspots")
view(sunspots)
head(sunspots)
require(graphics)
plot(sunspots, main = "sunspots data", xlab = "Year",
ylab = "Monthly sunspot numbers")
ss <- sunspots
view(ss)
library("dslabs")
data("sunspots")
ss <- sunspots
ss
view(ss)
head(ss)
inspect(ss)
library("tidyverse")
inspect(ss)
inspect(ss)
view(ss)
ss <- as.df(sunspots)
str(ss)
source("~/.active-rstudio-document", echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
stem(iris$Sepal.Width)
hist(iris$Sepal.Width)
5\*8
5 + 3
5\*8
5*8
5^8
number <- 5.7
print(class(number))
print(number)
integer_value <- 10L # The 'L' suffix indicates an integer
print(class(integer_value))
print(integer_value)
char_value <- "Hello, World!"
print(class(char_value))
print(char_value)
bool_value <- TRUE
print(class(bool_value))
print(bool_value)
numeric_vector <- c(1, 2, 3, 4, 5)
character_vector <- c("apple", "banana", "orange")
print(class(numeric_vector))
print(numeric_vector)
print(class(character_vector))
print(character_vector)
df <- data.frame(
Name = c("Alice", "Bob", "Charlie"),
Age = c(25, 30, 28),
Married = c(TRUE, FALSE, TRUE)
)
print(class(df))
print(df)
common_fruits <- c("mango", "papaya", "banana", "apple", "banana")
common_fruits
z <- c(2, 4, 16, 32, 64, 128, 256, 512, 1024)
1:8
1.1:8
seq(1, 30, by = 2)
wt <- scan()
wt
rep(3,7)
rep(7,3)
rep(1.1,6)
rep(3,2.5)
cat("\014")
install.packages(rmarkdown)
install.packages("rmarkdown")
5*8
5*8
x <- 8
y <- 5
x
print(x)
x + y
x <- 50
z <- x + y
w
w <- z + z
w
number <- 5.7
number
print(class(number))
integer_value <- 10L
# The 'L' suffix indicates an integer
print(class(integer_value))
print(integer_value)
integer_value2 <- 10
print(integer_value2)
print(class(integer_value2))
char_value <- "Hello, World!"
char <- "a"
print(class(char_value))
print(class(char))
char2 <- "9"
print(class(char2))
x > y
x < y
numeric_vector <- c(1, 2, 3, 4, 5)
print(class(numeric_vector))
numeric_vector
character_vector <- c("apple", "banana", "orange")
character_vector
df <- data.frame(
Name = c("Alice", "Bob", "Charlie"),
Age = c(25, 30, 28),
Married = c(TRUE, FALSE, TRUE)
)
View(df)
View(df)
print(class(df))
df
df <- data.frame(
Name = c("Alice", "Bob", "Charlie"),
Age = c(25, 30, 28),
Married = c(TRUE, FALSE, TRUE)
Place = c("Mumbai", "Delhi", "Bangalore")
df <- data.frame(
Name = c("Alice", "Bob", "Charlie"),
Age = c(25, 30, 28),
Married = c(TRUE, FALSE, TRUE),
Place = c("Mumbai", "Delhi", "Bangalore")
)
common_fruits <- c("mango", "papaya", "banana", "apple", "banana")
common_fruits
common_fruits
x == y
x == x
x == y
x == x
x != y
x == y
x == x
x != x
library(MASS)
data()
data(students)
data(student)
library(MASS)
data(students)
data("students")
library(MASS)
data("students")
data("students")  # Load the students dataset from MASS package
data("studentdata")  # Load the students dataset from MASS package
data("studentdata")  # Load the students dataset from MASS package
install.packages("LearnBayes")
library(LearnBayes)
data("studentdata")
data("studentdata")  # Load the students dataset from MASS package
force(studentdata)
str(studentdata)
install.packages("LearnBayes")
data("studentdata")  # Load the students dataset from MASS package
str(studentdata)
str(studentdata)
data()
library(LearnBayes)
data(LearnBayes)
data(package = "LearnBayes")
data(package = "LearnBayes")
data("darwin")
head(darwin)
data("studentdata")
head(studentdata)
data("studentdata")
data()
install.packages("usethis")
librart
library(usethis)
use_git_config(user.name = "Damitr", user.email = "damitr@proton.me")
